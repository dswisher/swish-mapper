@{Layout = "layout";}
@* @using SwishMapper.Models.Data *@

@foreach (var model in Model.Models.OrderBy(x => x.Name))
{
    <h1>@Model.Name Mapping<br/>@model.Name</h1>

    @foreach (var entity in model.Entities.OrderBy(x => x.Name))
    {
        <h2>@entity.Name Entity</h2>

        <table>
            <thead>
                <tr>
                    <th colspan="4">Mappings</th>
                </tr>
                <tr>
                    <th>Name</th>
                    <th>Data Type</th>
                    <th>XPath</th>
                    <th>Expression</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var attribute in entity.Attributes.OrderBy(x => x.Name))
                {
                    if (attribute.Maps.Count > 0)
                    {
                        var first = true;
                        foreach (var map in attribute.Maps)
                        {
                            <tr>
                                @if (first)
                                {
                                    first = false;
                                    <td rowspan="@attribute.Maps.Count">@attribute.Name</td>
                                    @* <td rowspan="@attribute.Maps.Count"><a href="@attribute.Url">@attribute.Name</a></td> *@
                                }

                                @* TODO - finish this up! *@

                                <td>@map.TargetAttribute.Attribute.DataType</td>
                                <td>@map.TargetAttribute.XPath</td>
                                <td>@map.Expression</td>

                                @*
                                <td>@map.FromAttribute.DataType</td>
                                <td>@attribute.SinkType</td>
                                <td><a href="@map.FromUrl">@map.FromXPath</a></td>
                                <td>@map.ToXPath</td>
                                <td>@map.Comments</td>
                                *@
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td class="highlight">@attribute.Name</td>
                            <td>&nbsp;</td>
                            <td>&nbsp;</td>
                            <td>&nbsp;</td>

                            @*
                            <td class="@(attribute.SinkType.Type == PrimitiveType.Ref ? string.Empty : "highlight")"><a href="@attribute.Url">@attribute.Name</a></td>
                            <td>&nbsp;</td>
                            <td>@attribute.SinkType</td>
                            <td>&nbsp;</td>
                            <td>&nbsp;</td>
                            <td>&nbsp;</td>
                            *@
                        </tr>
                    }
                }
            </tbody>
        </table>

        @* - - - - - - - - NEW STUFF BEGINS HERE - - - - - - - - *@

        @foreach (var attribute in entity.Attributes.OrderBy(x => x.Name))
        {
            <h3>@attribute.Name Attribute</h3>

            @* - - - Mappings - - - *@

            <table>
                <thead>
                    <tr>
                        <th colspan="3">Mappings</th>
                    </tr>
                    <tr>
                        <th>Map</th>
                        <th>Target XPath</th>
                        <th>Expression</th>
                    </tr>
                </thead>
                <tbody>
                    @if (attribute.Maps.Count > 0)
                    {
                        foreach (var map in attribute.Maps)
                        {
                            <tr>
                                <td>@map.Id</td>
                                <td>@map.TargetAttribute.XPath</td>
                                <td>@map.Expression</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <td colspan="3" class="highlight center">None!</td>
                    }
                </tbody>
            </table>

            @* - - - Notes - - - *@

            @if (attribute.Notes.Count > 0)
            {
                <table>
                    <thead class="muted">
                        <tr>
                            <th colspan="2">Notes</th>
                        </tr>
                        <tr>
                            <th>Map</th>
                            <th>Note</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var note in attribute.Notes)
                        {
                            <tr>
                                <td>@note.MapId</td>
                                <td>@note.Note</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }

            @* - - - Examples - - - *@

            @if (attribute.Examples.Count > 0)
            {
                <table>
                    <thead class="muted">
                        <tr>
                            <th colspan="4">Examples</th>
                        </tr>
                        <tr>
                            <th>Map</th>
                            <th>Key</th>
                            <th colspan="2">Target/Expression</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var example in attribute.Examples)
                        {
                            <tr>
                                <td rowspan="2">@example.MapId</td>
                                <td rowspan="2">@example.ExampleId</td>
                                <td class="right title">Target</td>
                                <td>@example.Target</td>
                            </tr>
                            <tr>
                                <td class="right title">Expression</td>
                                <td>@example.Expression</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        }
    }
}

