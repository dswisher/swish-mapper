@{Layout = "layout";}
@using SwishMapper.Models.Data

<h1>@Model.Name Model</h1>

<h2>Contents</h2>

<ul class="toc">
<li><a href="#section-overview">Overview</a></li>
<li><a href="#section-entities">Entities</a></li>
<ul>
@foreach (var entity in Model.Entities.OrderBy(x => x.Name))
{
    <li class="subitem"><a href="#@entity.Name">@entity.Name</a></li>
}
</ul>
<li><a href="#section-data-model-sources">Data Model Sources</a></li>
</ul>

<h2 id="section-overview">Overview</h2>

<h3>Description</h3>

<p>Placeholder: pull model description from the project file or similar, and plop it here.</p>

<h3>Links</h3>

<ul>
    <li><a href="index.html">Project Home</a></li>
</ul>

<h2 id="section-entities">Entities</h2>

@foreach (var entity in Model.Entities.OrderBy(x => x.Name))
{
    <h3 id="@entity.Name">@entity.Name</h3>

    <table>
        <thead>
            <tr>
                <th colspan="2">Entity Details</th>
            </tr>
            <tr>
                <th>Name</th>
                <th>Value</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Comment</td>
                <td>@entity.Comment</td>
            </tr>
            <tr>
                <td>Sources</td>
                <td>@string.Join(", ", entity.Sources.Select(x => x.ShortName).OrderBy(x => x))</td>
            </tr>
            <tr>
                <td>Referenced By</td>
                <td>
                    @foreach (var rb in entity.ReferencedBy)
                    {
                        <span class="comma"><a href="#@rb.Name">@rb.Name</a></span>
                    }
                </td>
            </tr>
        </tbody>
    </table>

    <table>
        <thead>
            <tr>
                <th colspan="7">Attributes</th>
            </tr>
            <tr>
                <th rowspan="2">Name</th>
                <th rowspan="2">Data Type</th>
                <th colspan="2">Occurs</th>
                <th rowspan="2">Xml<br/>Att?</th>
                <th rowspan="2">Sources</th>
                <th rowspan="2">Comment</th>
            </tr>
            <tr>
                <th>Min</th>
                <th>Max</th>
            </tr>
        <thead>
        <tbody>
            @foreach (var attribute in entity.Attributes.OrderBy(x => x.Name))
            {
                <tr>
                    <td>@attribute.Name</td>
                    @if (attribute.DataType?.Type == PrimitiveType.Ref)
                    {
                        <td>ref(<a href="#@attribute.DataType.RefName">@attribute.DataType.RefName</a>)</td>
                    }
                    else
                    {
                        <td>@attribute.DataType</td>
                    }
                    <td class="right">@attribute.MinOccurs</td>
                    <td class="right">@attribute.MaxOccurs</td>
                    <td>@(attribute.IsXmlAttribute ? "yes" : string.Empty)</td>
                    <td>@string.Join(", ", attribute.Sources.Select(x => x.ShortName).OrderBy(x => x))</td>
                    <td>@attribute.Comment</td>
                </tr>
            }
        </tbody>
    </table>

    @if (entity.HasSamples)
    {
        <table>
            <thead>
                <tr>
                    <th colspan="4">Samples</th>
                </tr>
                <tr>
                    <th>Attribute</th>
                    <th>Sample</th>
                    <th>Path</th>
                    <th>Top 5 Values</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var attribute in entity.Attributes.Where(x => x.Samples.Count > 0).OrderBy(x => x.Name))
                {
                    var first = true;
                    foreach (var sample in attribute.Samples)
                    {
                        <tr>
                            @if (first)
                            {
                                first = false;
                                <td rowspan="@attribute.Samples.Count">@attribute.Name</td>
                            }
                            <td>@sample.SampleId</td>
                            <td>@sample.Path</td>
                            <td>@string.Join(", ", @sample.Top5)</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    }
}


<h2 id="section-data-model-sources">Data Model Sources</h2>

<table>
    <thead>
        <tr>
            <th>Short Name</th>
            <th>Path</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var source in Model.Sources.OrderBy(x => x.ShortName))
        {
            <tr>
                <td>@source.ShortName</td>
                <td>@source.Path</td>
            </tr>
        }
    </tbody>
</table>

